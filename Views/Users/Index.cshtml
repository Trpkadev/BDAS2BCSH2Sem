@using BCSH2BDAS2.Helpers
@using BCSH2BDAS2.Models
@using System.Web
@model IEnumerable<BCSH2BDAS2.Models.Uzivatel>
@{
    ViewData["Title"] = "Seznam uživatelů";
}

<h2>@ViewData["Title"]</h2>
<div class="table-responsive overflow-auto p-3 text-center">
    <table class="table text-nowrap w-auto m-auto">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.UzivatelskeJmeno)</th>
                <th>@Html.DisplayNameFor(model => model.NazevRole)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var uzivatel in Model)
            {
                var encryptedUserId = OurCryptography.Instance.EncryptId(uzivatel.IdUzivatel);
                <tr>
                    <td>@Html.DisplayFor(modelItem => uzivatel.UzivatelskeJmeno)</td>

                    @if (uzivatel.IdUzivatel == ((Uzivatel?)ViewData[Resource.LOGGED_USER])?.IdUzivatel)
                    {
                        <td>@Html.DisplayFor(modelItem => uzivatel.NazevRole)</td>
                    }
                    else
                    {
                        <td>@Html.DropDownListFor(modelItem => uzivatel.IdRole, ViewBag.Role as SelectList, new { @class = "form-control", @onchange = $"submitRoleChange(this, '{HttpUtility.JavaScriptStringEncode(encryptedUserId)}')" })</td>
                    }

                    <td class="d-inline-flex gap-3 p-2 w-100">
                        <a asp-action="Detail" asp-route-encryptedId="@encryptedUserId" class="btn btn-primary">Detail</a>
                        <a asp-action="Delete" asp-route-encryptedId="@encryptedUserId" class="btn btn-danger">Odstranit</a>
                        @if (((Uzivatel?)ViewData[Resource.ACTING_USER])?.HasAdminRights() == true && uzivatel.IdUzivatel != ((Uzivatel?)ViewData[Resource.LOGGED_USER])?.IdUzivatel)
                        {
                            <a asp-action="ActBehalf" asp-route-encryptedId="@encryptedUserId" class="btn btn-secondary">Přepnout na</a>
                        }
                    </td>
                </tr>
                @Html.HiddenFor(modelItem => uzivatel.IdUzivatel)
                @Html.HiddenFor(modelItem => uzivatel.Heslo)
            }
        </tbody>
    </table>
    @Html.AntiForgeryToken()
</div>

<script type="text/javascript">
    function submitRoleChange(dropdown, id) {
        var selectedRoleId = dropdown.value;
        var uzivatel = {
            EncryptedId: id,
            IdRole: selectedRoleId
        };
        $.ajax({
            type: "POST",
            url: "/Users/EditSubmit",
            contentType: "application/json",
            headers: {"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()},
            data: JSON.stringify(uzivatel),
            success: (response) => alert(response.message),
            error: (response) => {
                if(response.responseJson != undefined)
                    response = response.responseJson
                alert(response.message == undefined ? "Error" : response.message);
            }
        });
    }
</script>