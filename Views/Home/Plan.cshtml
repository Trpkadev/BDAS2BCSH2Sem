@using BCSH2BDAS2.Helpers
@using BCSH2BDAS2.Models;
@using static BCSH2BDAS2.Controllers.HomeController
@model IEnumerable<VyhledaniSpojeViewModel>?;
@{
    ViewData["Title"] = "Vyhledat spojení";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="justify-content-center m-auto" style="width:fit-content">
    <div class="card shadow-sm">
        <div class="card-body">
            <form method="post" action="Plan">
                <div class="form-group mb-3">
                    <label for="from" class="control-label">Ze zastávky</label>
                    <input id="fromSelect" list="zastavkyList" class="form-control" oninput="setHiddenInput(this, 'from')" placeholder="Od" />
                    <input type="hidden" id="from" name="from" required />
                </div>

                <div class="form-group mb-3">
                    <label for="to" class="control-label">Do zastávky</label>
                    <input id="toSelect" list="zastavkyList" class="form-control" onchange="setHiddenInput(this, 'to')" placeholder="Do" />
                    <input type="hidden" id="to" name="to" required />
                </div>

                <div class="form-group mb-3">
                    <label for="time" class="control-label">Datum a čas odjezdu</label>
                    <input type="datetime-local" id="time" name="time" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                </div>

                <div>
                    <input type="submit" value="Vyhledat" class="btn btn-primary" />
                </div>
                <hr>
                @if (Model == null)
                {
                    <div>@Resource.DB_RESPONSE_NO_DATA</div>
                }
                else if (Model != null)
                {
                    <table class="table-bordered text-center">
                        <thead>
                            <tr>
                                <th class="p-2">@Html.DisplayNameFor(model => model.NazevSpoje)</th>
                                <th class="p-2">@Html.DisplayNameFor(model => model.NazevZastavky)</th>
                                <th class="p-2">@Html.DisplayNameFor(model => model.CasPrijezdu)</th>
                                <th class="p-2">@Html.DisplayNameFor(model => model.CasOdjezdu)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="p-1">@Html.DisplayFor(_ => item.NazevSpoje)</td>
                                    <td class="p-1">@Html.DisplayFor(_ => item.NazevZastavky)</td>
                                    <td class="p-1">@Html.DisplayFor(_ => item.CasPrijezdu)</td>
                                    <td class="p-1">@Html.DisplayFor(_ => item.CasOdjezdu)</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                }
                <datalist id="zastavkyList">
                    @if (ViewBag.Zastavky is IEnumerable<Zastavka> zastavky)
                    {
                        var encryptedZastavky = zastavky.Select(item => new { item.Nazev, EncryptedId = OurCryptography.Instance.EncryptId(item.IdZastavka) }).ToList();
                        foreach (var item in encryptedZastavky)
                        {
                            <option id="@item.EncryptedId" value="@item.Nazev">@item.Nazev</option>
                        }
                    }
                </datalist>
            </form>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', () => {
      const input = document.getElementById('fromSelect');
      const input2 = document.getElementById('toSelect');
      const datalist = document.getElementById('zastavkyList');
      const options = datalist.querySelectorAll('option');

      const span = document.createElement('span');
      span.style.visibility = 'hidden';
      span.style.position = 'absolute';
      span.style.font = window.getComputedStyle(input).font;
      document.body.appendChild(span);

      let maxWidth = input.offsetWidth;
      options.forEach(option => {
        span.textContent = option.value;
        maxWidth = Math.max(maxWidth, span.offsetWidth+16);
      });
      input.style.width = `${maxWidth}px`;
      input2.style.width = `${maxWidth}px`;

      document.body.removeChild(span);
    });

    function setHiddenInput(inputElement, hiddenInputId) {
        const selectedOption = [...document.getElementById('zastavkyList').options].find(option => option.value === inputElement.value);
        if (selectedOption)
            document.getElementById(hiddenInputId).value = selectedOption.id;
    }
</script>