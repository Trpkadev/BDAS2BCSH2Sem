@using BCSH2BDAS2.Helpers
@using BCSH2BDAS2.Models
@using System.Web
@model IEnumerable<BCSH2BDAS2.Models.Udrzba>
@{
    ViewData["Title"] = "Seznam údržeb";
}

@await Html.PartialAsync("IndexCreateTitle")
<div class="container">
    <div class="row-cols-auto">
        @if (Model.OfType<Oprava>().Any())
        {
            <div class="col-sm">
                <h2 class="text-center">Opravy</h2>
                <div class="table-responsive overflow-auto p-3">
                    <table class="table text-nowrap w-auto m-auto">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.First().NazevVozidla)</th>
                                <th>@Html.DisplayNameFor(model => model.First().Datum)</th>
                                <th>@Html.DisplayNameFor(model => model.First().KonecUdrzby)</th>
                                <th>@Html.DisplayNameFor(model => ((Oprava)model.First()).PopisUkonu)</th>
                                <th>@Html.DisplayNameFor(model => ((Oprava)model.First()).Cena)</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (Oprava item in Model.Where(item => item is Oprava))
                            {
                                <tr>
                                    <td>
                                        <a asp-controller="Vehicles" asp-action="Detail" asp-route-encryptedId="@OurCryptography.Instance.EncryptId(item.IdVozidlo)">@Html.DisplayFor(_ => item.NazevVozidla)</a>
                                    </td>
                                    <td>@Html.DisplayFor(_ => item.Datum)</td>
                                    <td>
                                        @if (item.KonecUdrzby != null)
                                        {
                                            <span>@Html.DisplayFor(_ => item.KonecUdrzby)</span>
                                            @if (((DateTime)item.KonecUdrzby - item.Datum).TotalHours > 72)
                                            {
                                                <span class="badge bg-warning text-dark">>72h</span>
                                            }
                                        }
                                        else
                                        {
                                            var encryptedUserId = OurCryptography.Instance.EncryptId(item.IdUdrzba);
                                            <button onclick="submitMaintenanceEnd(this,'@HttpUtility.JavaScriptStringEncode(encryptedUserId)')" class="btn btn-secondary">Ukončit Údržbu</button>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(_ => item.PopisUkonu)</td>
                                    <td>@Html.DisplayFor(_ => item.Cena)</td>
                                    @await Html.PartialAsync("IndexActionButtons", item.IdUdrzba)
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        @if (Model.OfType<Cisteni>().Any())
        {
            <div class="col-sm">
                <h2 class="text-center">Čístění</h2>
                <div class="table-responsive overflow-auto p-3">
                    <table class="table text-nowrap w-auto m-auto">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.First().NazevVozidla)</th>
                                <th>@Html.DisplayNameFor(model => model.First().Datum)</th>
                                <th>@Html.DisplayNameFor(model => model.First().KonecUdrzby)</th>
                                <th>@Html.DisplayNameFor(model => ((Cisteni)model.First()).CistenoOzonem)</th>
                                <th>@Html.DisplayNameFor(model => ((Cisteni)model.First()).UmytoVMycce)</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (Cisteni item in Model.Where(item => item is Cisteni))
                            {
                                <tr>
                                    <td>
                                        <a asp-controller="Vehicles" asp-action="Detail" asp-route-encryptedId="@OurCryptography.Instance.EncryptId(item.IdVozidlo)">@Html.DisplayFor(_ => item.NazevVozidla)</a>
                                    </td>
                                    <td>@Html.DisplayFor(_ => item.Datum)</td>
                                    <td>
                                        @if (item.KonecUdrzby != null)
                                        {
                                            <span>@Html.DisplayFor(_ => item.KonecUdrzby)</span>
                                            @if (((DateTime)item.KonecUdrzby - item.Datum).TotalHours > 72)
                                            {
                                                <span class="badge bg-warning text-dark">>72h</span>
                                            }
                                        }
                                        else
                                        {
                                            var encryptedUserId = OurCryptography.Instance.EncryptId(item.IdUdrzba);
                                            <button onclick="submitMaintenanceEnd(this,'@HttpUtility.JavaScriptStringEncode(encryptedUserId)')" class="btn btn-secondary">Ukončit Údržbu</button>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(_ => item.CistenoOzonem)</td>
                                    <td>@Html.DisplayFor(_ => item.UmytoVMycce)</td>
                                    @await Html.PartialAsync("IndexActionButtons", item.IdUdrzba)
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @if (Model.Any(item => !(item is Oprava || item is Cisteni)))
        {
            <div class="row">
                <div class="col-sm">
                    <h2 class="text-center">Nespecifikované</h2>
                    <div class="table-responsive overflow-auto p-3">
                        <table class="table text-nowrap w-auto m-auto">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.First().IdVozidlo)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().Datum)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().KonecUdrzby)</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Where(item => !(item is Oprava || item is Cisteni)))
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(_ => item.IdVozidlo)</td>
                                        <td>@Html.DisplayFor(_ => item.Datum)</td>
                                        <td>
                                            @if (item.KonecUdrzby != null)
                                            {
                                                <span>@Html.DisplayFor(_ => item.KonecUdrzby)</span>
                                                @if (((DateTime)item.KonecUdrzby - item.Datum).TotalHours > 72)
                                                {
                                                    <span class="badge bg-warning text-dark">>72h</span>
                                                }
                                            }
                                            else
                                            {
                                                var encryptedUserId = OurCryptography.Instance.EncryptId(item.IdUdrzba);
                                                <button onclick="submitMaintenanceEnd(this,'@HttpUtility.JavaScriptStringEncode(encryptedUserId)')" class="btn btn-secondary">Ukončit Údržbu</button>
                                            }
                                        </td>
                                        @await Html.PartialAsync("IndexActionButtons", item.IdUdrzba)
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
    @Html.AntiForgeryToken()
</div>

<script>
    function submitMaintenanceEnd(sender, encryptedId)
    {
        $.ajax({
            url: "Maintenance/UpdateKonecUdrzby",
            type: 'POST',
            headers: {"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()},
            data: {encryptedId: encryptedId},
            success: (response) => {
                alert(response.message)
                const parent = sender.parentElement
                parent.replaceChildren()
                let valueSpan = document.createElement('span');
                valueSpan.innerText = response.value;
                parent.appendChild(valueSpan);
                if (!response.onTime) {
                    let badgeSpan = document.createElement('span');
                    badgeSpan.classList.add('badge', 'bg-warning', 'text-dark');
                    badgeSpan.innerText = '>72h';
                    parent.appendChild(badgeSpan)
                }
            },
            error: (response) => {
            if(response.responseJson != undefined)
                response = response.responseJson
            alert(response.message)
            }
        })
    };
</script>